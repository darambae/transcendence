input {
  tcp {
    port => 6006
    codec => "json"
    type => "django_log"
  }
}

filter {
  # Process Django JSON logs
  if [type] == "django_log" {
    
    # Parse timestamp if it exists
    if [timestamp] {
      date {
        match => [ "timestamp", "yyyy-MM-dd HH:mm:ss,SSS", "ISO8601" ]
        target => "@timestamp"
      }
    }
    
    # Ensure required fields exist with defaults
    if ![level] {
      mutate { add_field => { "level" => "INFO" } }
    }
    
    if ![service_type] {
      mutate { add_field => { "service_type" => "unknown" } }
    }
    
    if ![logger] {
      mutate { add_field => { "logger" => "django" } }
    }
    
    if ![environment] {
      mutate { add_field => { "environment" => "development" } }
    }
    
    # Convert log level to lowercase for consistency
    if [level] {
      mutate {
        lowercase => [ "level" ]
      }
    }
    
    # Add computed fields for better analytics
    if [request_method] and [request_path] {
      mutate {
        add_field => { "request_full" => "%{request_method} %{request_path}" }
      }
    }
    
    # Categorize log levels for better filtering
    if [level] == "error" or [level] == "critical" or [level] == "fatal" {
      mutate { add_field => { "log_category" => "error" } }
    } else if [level] == "warning" or [level] == "warn" {
      mutate { add_field => { "log_category" => "warning" } }
    } else if [level] == "info" {
      mutate { add_field => { "log_category" => "info" } }
    } else {
      mutate { add_field => { "log_category" => "debug" } }
    }
    
    # Clean up unnecessary fields for cleaner data
    mutate {
      remove_field => [ "host", "@version" ]
    }
    
    # Add tags for easier filtering in Kibana
    if [service_type] {
      mutate { add_tag => [ "microservice", "%{service_type}" ] }
    }
    
    if [user_name] and [user_name] != "" {
      mutate { add_tag => [ "authenticated_user" ] }
    }
    
    if [request_method] {
      mutate { add_tag => [ "http_request" ] }
    }
  }
}

output {
  elasticsearch {
    hosts => ["https://elasticsearch:9200"]
    index => "django-logs-%{+YYYY.MM.dd}"
    user => "logstash_internal"
    password => "${ELASTIC_PASSWORD}"
    ssl_enabled => true
    ssl_certificate_authorities => "/usr/share/logstash/config/certs/ca/ca.crt"
    ssl_verification_mode => "full"
  }
  
  # Debug output for monitoring (can be removed in production)
  stdout {
    codec => rubydebug {
      metadata => true
    }
  }
}
