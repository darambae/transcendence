# input {
#     tcp {
#       port => 6000
#       codec => json {
#         charset => "UTF-8"
#         target => "parsed_json"
#       }
#       # codec => json_lines
#       tags => ["user_service"]
#       ssl_enable => false
#     }
    

# }
# filter {
#   if "django" in [tags] and "user_service" in [tags] {
#     grok {
#       match => { "[parsed_json][message]" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:log_message}" }
#     }
#     date {
#       match => [ "[parsed_json][timestamp]", "YYYY-MM-dd HH:mm:ss.SSS z" ]
#       target => "@timestamp"
#     }
#     mutate {
#       remove_field => ["[parsed_json][message]", "ecs.version", "process.thread.name", "log.logger", "elasticsearch.cluster.uuid"]
#       add_field => { "service" => "user_service" }
#       add_field => { "log_type" => "django" }
#     }
#   # if "django" in [tags] and "user_service" in [tags] {
#   #   grok {
#   #     match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:log_message}" }
#   #   }
#   #   date {
#   #     match => [ "timestamp", "YYYY-MM-dd HH:mm:ss.SSS z" ]
#   #     target => "@timestamp"
#   #   }
#   #   mutate {
#   #     remove_field => ["timestamp", "ecs.version", "process.thread.name", "log.logger", "elasticsearch.cluster.uuid"]
#   #     add_field => { "service" => "user_service" }
#   #     add_field => { "log_type" => "django" }
#   #   }
#   # } else if "unknown_source" in [tags] {
#   #   mutate {
#   #     gsub => [
#   #       "message", "[\x00-\x1F\x7F]", ""
#   #     ]
#   #   }
#   } else {
#     drop { }
#   }
# }


# output {
#   stdout {
#     codec => rubydebug
#   }
  
#   elasticsearch {
#     hosts => ["https://elasticsearch:9200"]
#     user => "logstash_internal"
#     password => "jJkJ_p7EwHa0k+EgBgNW" 
#     ssl => true
#     ssl_verification_mode => "full"
#     cacert => "/usr/share/logstash/config/certs/ca/ca.crt"
#     index => "[django]-%{+YYYY.MM.dd}"
#   }
# }
input {
    tcp {
      port => 6006
      codec => json_lines {
        charset => "UTF-8"
        target => "parsed_json"
      }
      tags => ["user_service", "django"]
      ssl_enable => false
    }
}

filter {
  if "django_app" in [tags] {
    # Your existing Django filtering logic
    if [parsed_json] {
      date {
        match => [ "[parsed_json][timestamp]", "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'" ]
        target => "@timestamp"
        timezone => "UTC"
      }
      mutate {
        # ... other Django mutations ...
      }
    } else {
      drop {} # If it's tagged as django but not valid JSON, drop it (or handle differently)
    }
  } else if "unknown" in [tags] {
    # Filtering logic for the other system's plain text logs
    grok {
      match => { "message" => "%{LOGLEVEL:level} %{GREEDYDATA:other_log_message}" } # Example pattern
    }
    # ... other processing for the other system's logs ...
  } else {
    drop {} # Default drop for anything not identified
  }
}

output {
  stdout {
    codec => line
  }

  elasticsearch {
    hosts => ["https://elasticsearch:9200"]
    user => "logstash_internal"
    password => "jJkJ_p7EwHa0k+EgBgNW"
    ssl => true
    ssl_verification_mode => "full"
    cacert => "/usr/share/logstash/config/certs/ca/ca.crt"
    index => "[django]-%{+YYYY.MM.dd}"
  }
}
