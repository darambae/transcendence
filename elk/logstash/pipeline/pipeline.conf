input {
    tcp {
        port => 5044
        codec => json_lines
        tags => ["from_filebeat"]
    }
    tcp {
        port => 5044
        codec => json
        tags => ["from_django"]
    }
}

filter {
  if "from_filebeat" in [tags] {
    if [container][name] == "nginx" {
      # Grok filter for Nginx logs
      grok {
        match => { "message" => "%{COMBINEDAPACHELOG}" }
      }
      date {
        match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss z" ]
        target => "@timestamp"
      }
    } else if [container][name] == "postgres" {
      # Grok filter for PostgreSQL logs
      grok {
        match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{USER:user}@%{DATA:database}:%{NUMBER:pid} %{LOGLEVEL:level}:  %{GREEDYDATA:log_message}" }
      }
      date {
        match => [ "timestamp", "YYYY-MM-dd HH:mm:ss.SSS z" ]
        target => "@timestamp"
      }
      mutate {
        convert => { "pid" => "integer" }
      }
    }
    # Add common filters for Filebeat logs here
  } else if "from_django" in [tags] {
    # Assuming Django sends JSON, no extra parsing might be needed
    # You might want to add a date filter if the timestamp field needs conversion
  }
  # Add other common filters for all logs
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
    manage_template => true
    template_name => "filebeat-%{[@metadata][version]}"
    template_overwrite => true
  }
}