services:
  postgres:
    image: postgres:latest
    # user: "999:999"
    ports:
      - "5431:5431"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - elk_logs:/var/log/postgresql
      # - ./postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
    container_name: postgres
    # labels:
    #     co.elastic.logs/module: "postgresql"
    # command: >
    #     bash -c "
    #     find /var/log/postgresql -writable -exec chown postgres:postgres {};
    #     chmod -R 755 /var/log/postgresql;
    #     postgres -c config_file=/etc/postgresql/postgresql.conf;
    #     "
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3
    env_file:
      - .env
    networks:
      - shared_network
    # logging:
    #     driver: "json-file"
    #     options:
    #         max-size: "10m"
    #         max-file: "3"

  user_service:
    build:
      context: ./backend/user_service
      dockerfile: Dockerfile
    container_name: user_service
    # labels:
    #     co.elastic.logs/module: "django"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    # environment:
    #   POSTGRES_USER: ${POSTGRES_USER}
    #   POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #   POSTGRES_DB: ${POSTGRES_DB}
    #   POSTGRES_PORT: 5432
    #   POSTGRES_HOST: postgres
    #   DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    #   DJANGO_SUPERUSER: ${DJANGO_SUPERUSER}
    #   DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
    #   DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
    env_file:
      - .env
    restart: always
    networks:
      - shared_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  nginx:
    image: nginx:latest
    container_name: nginx
    # labels:
    #     co.elastic.logs/module: "nginx"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      user_service:
        condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      # - elk_logs:/var/log/nginx
      - certs:/etc/nginx/certs
    restart: always
    # logging:
    #     driver: "json-file"
    networks:
      - shared_network

volumes:
  postgres_data:
    name: postgres_data
    driver: local
  certs:
    external: true

networks:
  shared_network:
    name: shared_network
    external: true
