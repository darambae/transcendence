
services:
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      
  user_service:
    build:
      context: ./backend/user_service
      dockerfile: Dockerfile
    container_name: user_service
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_SUPERUSER: ${DJANGO_SUPERUSER}
      DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
      DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
    env_file:
      - .env
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - user_service
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    restart: always
    logging:
      driver: "json-file"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.17.5
    container_name: logstash
    ports:
      - "5044:5044"
    volumes:
      - .elk/logstash/pipeline:/usr/share/logstash/pipeline
      - .elk/logstash/config:/usr/share/logstash/config
      - .elk/logstash/data:/usr/share/logstash/data
      - .elk/logstash/logs:/usr/share/logstash/logs
    depends_on:
      - postgres
  
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.17.5
    container_name: filebeat
    volumes:
      -.elk/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - logstash

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.5
    container_name: elasticsearch
  
  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.5
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  
volumes:
  postgres_data:
